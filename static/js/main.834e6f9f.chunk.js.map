{"version":3,"sources":["components/buttons/index.js","components/tables/index.js","components/icons/index.js","containers/index.js","serviceWorker.js","index.js"],"names":["withStyles","theme","fab","margin","spacing","unit","extendedIcon","marginRight","props","classes","react_default","a","createElement","Fab_default","color","aria-label","className","Add_default","Icon_default","variant","Navigation_default","disabled","Delete_default","TAX_RATE","ccyFormat","num","concat","toFixed","rows","map","row","id","desc","qty","price","priceRow","apply","Object","toConsumableArray","invoiceSubtotal","_ref","reduce","sum","i","invoiceTaxes","invoiceTotal","root","width","marginTop","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","key","rowSpan","colSpan","FontAwesome","loadCSS","document","querySelector","this","classNames","icon","iconHover","style","fontSize","React","Component","display","justifyContent","alignItems","&:hover","red","App","buttons","tables","icons","Boolean","window","location","hostname","match","ReactDOM","render","containers","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPA2CeA,2BAlCA,SAAAC,GAAK,MAAK,CACvBC,IAAK,CACHC,OAAQF,EAAMG,QAAQC,MAExBC,aAAc,CACZC,YAAaN,EAAMG,QAAQC,QA6BhBL,CAzBf,SAA+BQ,GAAO,IAC5BC,EAAYD,EAAZC,QACR,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKG,MAAM,UAAUC,aAAW,MAAMC,UAAWP,EAAQP,KACvDQ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKG,MAAM,YAAYC,aAAW,OAAOC,UAAWP,EAAQP,KAC1DQ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,mBAEFD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKQ,QAAQ,WAAWJ,aAAW,SAASC,UAAWP,EAAQP,KAC7DQ,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAgBK,UAAWP,EAAQH,eADrC,YAIAI,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKU,UAAQ,EAACN,aAAW,SAASC,UAAWP,EAAQP,KACnDQ,EAAAC,EAAAC,cAACU,EAAAX,EAAD,uHCvBFY,EAAW,IAajB,SAASC,EAAUC,GACjB,SAAAC,OAAUD,EAAIE,QAAQ,IAgBxB,IAAMC,EAAO,CACX,CAAC,mBAAoB,IAAK,MAC1B,CAAC,eAAgB,GAAI,OACrB,CAAC,eAAgB,EAAG,QACpBC,IAAI,SAACC,EAAKC,GAAN,OAbN,SAAmBA,EAAIC,EAAMC,EAAK5B,GAEhC,MAAO,CAAE0B,KAAIC,OAAMC,MAAK5B,OAAM6B,MANhC,SAAkBD,EAAK5B,GACrB,OAAO4B,EAAM5B,EAIC8B,CAASF,EAAK5B,KAYF+B,WAAT,GAAUL,GAAVL,OAAAW,OAAAC,EAAA,EAAAD,CAAiBP,OAE9BS,EAA2BX,EATlBC,IAAI,SAAAW,GAAA,OAAAA,EAAGN,QAAmBO,OAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,GAAG,GAU/DC,EAAerB,EAAWgB,EAC1BM,EAAeD,EAAeL,EAgDrBvC,2BApFA,SAAAC,GAAK,MAAK,CACvB6C,KAAM,CACJC,MAAO,OACPC,UAAgC,EAArB/C,EAAMG,QAAQC,KACzB4C,UAAW,QAEbC,MAAO,CACLC,SAAU,OA6ECnD,CA9Cf,SAAuBQ,GAAO,IACpBC,EAAYD,EAAZC,QACR,OACEC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAOK,UAAWP,EAAQqC,MACxBpC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAOK,UAAWP,EAAQyC,OACxBxC,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,KACED,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,aACAD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAjB,QACA/C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAjB,KACA/C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAjB,WAGJ/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,KACGiB,EAAKC,IAAI,SAAAC,GAAG,OACXpB,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAUgD,IAAK7B,EAAIC,IACjBrB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,KAAYmB,EAAIE,MAChBtB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAS3B,EAAIG,KAC9BvB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAS3B,EAAIzB,MAC9BK,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAASjC,EAAUM,EAAII,WAG5CxB,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAWiD,QAAS,IACpBlD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAWkD,QAAS,GAApB,YACAnD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAASjC,EAAUe,KAEtC7B,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,YACAD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAAjB,GAAA/B,QAAyC,IAAXH,GAAgBI,QAAQ,GAAtD,OACAjB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAASjC,EAAUoB,KAEtClC,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAWkD,QAAS,GAApB,SACAnD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,MAAM,SAASjC,EAAUqB,2FC3D1CiB,8LAEFC,kBACE,0DACAC,SAASC,cAAc,0DAIlB,IACCxD,EAAYyD,KAAK1D,MAAjBC,QAER,OACEC,EAAAC,EAAAC,cAAA,OAAKI,UAAWP,EAAQqC,MACtBpC,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAMK,UAAWmD,IAAW1D,EAAQ2D,KAAM,uBAC1C1D,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAMK,UAAWmD,IAAW1D,EAAQ2D,KAAM,qBAAsBtD,MAAM,YACtEJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAMK,UAAWmD,IAAW1D,EAAQ2D,KAAM,qBAAsBtD,MAAM,cACtEJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAMK,UAAWmD,IAAW1D,EAAQ2D,KAAM,qBAAsBtD,MAAM,WACtEJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEK,UAAWmD,IAAW1D,EAAQ4D,UAAW,qBACzCvD,MAAM,QACNwD,MAAO,CAAEC,SAAU,MAErB7D,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEK,UAAWmD,IAAW1D,EAAQ2D,KAAM,qBACpCtD,MAAM,WACNyD,SAAS,kBAzBOC,IAAMC,WAoCjBzE,uBArDA,SAAAC,GAAK,MAAK,CACvB6C,KAAM,CACJ4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,YAEdR,KAAM,CACJjE,OAA6B,EAArBF,EAAMG,QAAQC,MAExBgE,UAAW,CACTlE,OAA6B,EAArBF,EAAMG,QAAQC,KACtBwE,UAAW,CACT/D,MAAOgE,IAAI,SAyCF9E,CAAmB8D,GC9CnBiB,MAVf,WACE,OACErE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAACsE,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAAS1B,SAAS2B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.834e6f9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nfunction FloatingActionButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab}>\r\n        <Icon>edit_icon</Icon>\r\n      </Fab>\r\n      <Fab variant=\"extended\" aria-label=\"Delete\" className={classes.fab}>\r\n        <NavigationIcon className={classes.extendedIcon} />\r\n        Extended\r\n      </Fab>\r\n      <Fab disabled aria-label=\"Delete\" className={classes.fab}>\r\n        <DeleteIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\nFloatingActionButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FloatingActionButtons);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(id, desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { id, desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  ['Paperclips (Box)', 100, 1.15],\r\n  ['Paper (Case)', 10, 45.99],\r\n  ['Waste Basket', 2, 17.99],\r\n].map((row, id) => createRow(id, ...row));\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nfunction SpanningTable(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">@</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSpanningTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SpanningTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { loadCSS } from 'fg-loadcss/src/loadCSS';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  icon: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing.unit * 2,\r\n    '&:hover': {\r\n      color: red[800],\r\n    },\r\n  },\r\n});\r\n\r\nclass FontAwesome extends React.Component {\r\n  componentDidMount() {\r\n    loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\r\n      document.querySelector('#insertion-point-jss'),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"primary\" />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"secondary\" />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"action\" />\r\n        <Icon\r\n          className={classNames(classes.iconHover, 'fa fa-plus-circle')}\r\n          color=\"error\"\r\n          style={{ fontSize: 30 }}\r\n        />\r\n        <Icon\r\n          className={classNames(classes.icon, 'fa fa-plus-circle')}\r\n          color=\"disabled\"\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFontAwesome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FontAwesome);\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { FloatingActionButtons } from '../components/';\r\nimport { SpanningTable } from '../components/';\r\nimport { FontAwesome } from '../components/';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <FloatingActionButtons></FloatingActionButtons>\r\n      <SpanningTable></SpanningTable>\r\n      <FontAwesome></FontAwesome>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}